;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝

;;; Files Inclusion ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

include-file = ~/.config/bspwm/apps/polybar/colors.ini
include-file = ~/.config/bspwm/apps/polybar/modules.ini

;;; Global WM Settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top/bottom value
; Used for top/bottom aligned bars
margin-bottom = 0
margin-top = 0

;;; Bar Settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[bar/main]
; Use either of the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ polybar -m | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
monitor =

; Use the specified monitor as a fallback if the main one is not found.
monitor-fallback =

; Require the monitor to be in connected state
; XRandR sometimes reports my monitor as being disconnected (when in use)
monitor-strict = false

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
override-redirect = false

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block
; When false, the center position will be based on the size of the other blocks.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 100%
height = 24

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction 
; of 50% minus 10 pixels
offset-x = 0%
offset-y = 0%

; Background, Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${colors.background}
foreground = ${colors.foreground}

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded
; Individual top/bottom values can be defined using: radius-{top,bottom}
radius-top = 0.0
radius-bottom = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 3pt
line-color = ${colors.background}

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed withing this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
border-size = 0
border-color = ${colors.primary}

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using: padding-{left,right}
padding = 1

; Number of spaces to add before/after each module
; Individual side values can be defined using: module-margin-{left,right}
module-margin = 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Fonts are defined using <font-name>;<vertical-offset>
font-0 = "Iosevka Nerd Font:size=9:weight=Bold;3"

; Modules are added to one of the available blocks
modules-left = launcher space xworkspaces 
modules-center = xwindow
modules-right = cpu memory pulseaudio date network powermenu

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; The separator will be inserted between the output of each module
separator = 
separator-foreground = ${colors.disabled}

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
wm-name = 

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
locale = pt_BR.UTF-8

; Position of the system tray window ( center | left | right | none )
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
tray-position = right

; If true, the bar will not shift its contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 15

; Background color for the tray container 
; NOTE: By default the tray container will use the bar background color.
tray-background = ${colors.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the selected window manager's root
; Fixes the issue where the bar is being drawn on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm | i3 (requires: `override-redirect = true`)
wm-restack = bspwm

; Set a DPI values used when rendering text
; This only affects scalable fonts
; dpi = 

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

;;; Application Settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[settings]

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = true

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
